-- MySQL Script generated by MySQL Workbench
-- 01/06/16 21:37:09
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema image_shopping
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema image_shopping
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `image_shopping` DEFAULT CHARACTER SET utf8 ;
USE `image_shopping` ;

-- -----------------------------------------------------
-- Table `image_shopping`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `image_shopping`.`user` (
  `id` INT(11) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `fullname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NULL DEFAULT NULL,
  `address` TEXT NULL DEFAULT NULL,
  `active` INT(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `image_shopping`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `image_shopping`.`album` (
  `id` INT(11) NOT NULL,
  `id_user` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `iduser_album_id_user_idx` (`id_user` ASC),
  CONSTRAINT `iduser_album_id_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `image_shopping`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `image_shopping`.`image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `image_shopping`.`image` (
  `id` INT(11) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `author` INT(11) NOT NULL,
  `likes` INT(11) NULL DEFAULT NULL,
  `link` LONGTEXT NOT NULL,
  `price` INT(11) NOT NULL,
  `views` INT(11) NULL DEFAULT NULL,
  `rate` INT(11) NULL DEFAULT NULL,
  `id_album` INT(11) NULL DEFAULT NULL,
  `accept` INT(1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `author_idx` (`author` ASC),
  INDEX `idalbum_img_id_album_idx` (`id_album` ASC),
  CONSTRAINT `auth_img_id_user`
    FOREIGN KEY (`author`)
    REFERENCES `image_shopping`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idalbum_img_id_album`
    FOREIGN KEY (`id_album`)
    REFERENCES `image_shopping`.`album` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `image_shopping`.`cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `image_shopping`.`cart` (
  `id_user` INT(11) NOT NULL,
  `id_image` INT(11) NOT NULL,
  `id_author` INT(11) NOT NULL,
  `code_atm` INT(11) NULL DEFAULT NULL,
  `paid` INT(1) NOT NULL,
  PRIMARY KEY (`id_user`, `id_image`),
  INDEX `iduser_cart_id_user_idx` (`id_user` ASC),
  INDEX `idimg_cart_id_image_idx` (`id_image` ASC),
  CONSTRAINT `idimg_cart_id_image`
    FOREIGN KEY (`id_image`)
    REFERENCES `image_shopping`.`image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `iduser_cart_id_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `image_shopping`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `image_shopping`.`content`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `image_shopping`.`content` (
  `id` INT(11) NOT NULL,
  `id_image` INT(11) NOT NULL,
  `content` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idimg_content_id_image_idx` (`id_image` ASC),
  CONSTRAINT `idimg_content_id_image`
    FOREIGN KEY (`id_image`)
    REFERENCES `image_shopping`.`image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `image_shopping`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `image_shopping`.`like` (
  `id_user` INT(11) NOT NULL,
  `id_img` INT(11) NOT NULL,
  PRIMARY KEY (`id_user`, `id_img`),
  INDEX `idimg_like_id_img_idx` (`id_img` ASC),
  CONSTRAINT `idimg_like_id_img`
    FOREIGN KEY (`id_img`)
    REFERENCES `image_shopping`.`image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `iduser_like_id_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `image_shopping`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `image_shopping`.`reports`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `image_shopping`.`reports` (
  `id` INT(11) NOT NULL,
  `id_user` INT(11) NOT NULL,
  `id_img` INT(11) NOT NULL,
  `content` LONGTEXT NOT NULL,
  `accept` INT(1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `iduser_report_id_user_idx` (`id_user` ASC),
  INDEX `idimg_report_id_image_idx` (`id_img` ASC),
  CONSTRAINT `idimg_report_id_image`
    FOREIGN KEY (`id_img`)
    REFERENCES `image_shopping`.`image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `iduser_report_id_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `image_shopping`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

USE `image_shopping` ;

-- -----------------------------------------------------
-- procedure active_pass_user
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `active_pass_user`(id int, code int(1), pass varchar(45))
BEGIN
update user
set user.active = code, user.password = pass
where user.id = id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure add_album
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_album`(id_user int, name varchar(45))
BEGIN
declare id int DEFAULT 0;
set id = (select count(id) from `image_shopping`.`album`);
insert into `image_shopping`.`album` (`id`, `id_user`, `name`)
value (id, id_user, name); 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure add_cart
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_cart`(id_user int, id_img int, id_author int)
BEGIN
	insert into `image_shopping`.`cart` (`id_user`, `id_image`, `id_author`, `code_atm`, `paid`)
	value (id_user, id_img, id_author, null, 0);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure add_image
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_image`(
type varchar(45), 
name varchar(45), 
author int, 
link longtext, 
price int,
album int)
BEGIN
declare id int default 0;
set id = (select count(id) from `image_shopping`.`image`);
insert into `image_shopping`.`image` (`id`, `type`, `name`, `author`, `likes`, `link`, `price`, `views`, `rate`, `id_album`, `accept`)
value (id, type, name, author, '0', link, price, '0', '0', album, '1'); 

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure add_report
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_report`(id_user int, id_image int, content longtext)
BEGIN
declare id int default 0;
set id = (select count(id) from `image_shopping`.`reports`);
insert into `image_shopping`.`reports`(`id`, `id_user`, `id_img`, `content`, `accept`)
value(id,id_user,id_image,content,1);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure add_user
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_user`(username varchar(45), pass varchar(45), fullname varchar(45), email varchar(45), phone varchar(45), address varchar(45))
BEGIN
declare id int DEFAULT 0;
set id = (select count(id) from `image_shopping`.`user`);
INSERT INTO `image_shopping`.`user` (`id`, `username`, `password`, `fullname`, `email`, `phone`, `address`, `active`) 
value (id, username, pass, fullname, email, phone, address, '1');
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure author_sell_max
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `author_sell_max`()
BEGIN
select distinct id_author
from (SELECT DISTINCT COUNT(id_author), id_author
	  from cart 
      group by id_author
      order by COUNT(id_author) DESC
      LIMIT 10) as temp;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure check_like
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `check_like`(id_user int, id_img int)
BEGIN
SELECT Count(*)
FROM `image_shopping`.`like`
WHERE id_user = `image_shopping`.`like`.id_user 
AND id_img = `image_shopping`.`like`.id_img; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure count_album
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `count_album`()
BEGIN
select count(id) from album;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure getAllAlbumName
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `getAllAlbumName`()
BEGIN
select album.name from image_shopping.album;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_allCart
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_allCart`(id_user int)
BEGIN
	SELECT `cart`.`id_image`
	FROM `image_shopping`.`cart`
    where `cart`.`id_user` = id_user;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_cart
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_cart`(id_user int)
BEGIN
	SELECT cart.id_image FROM image_shopping.cart
	WHERE cart.id_user = id_user AND cart.paid = 0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_content
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_content`(id_img int)
BEGIN
select content
from content
where content.id = id_img;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_images
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_images`()
BEGIN
select id, type, name, author, likes, link, price, views, rate, id_album, accept
from image;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_paid_image
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_paid_image`(id_user int)
BEGIN
	select id_image from cart where cart.id_user = id_user and paid = 1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_user
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `get_user`()
BEGIN
select id, username, fullname, email, phone, address, active from user;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure image_sell_max
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `image_sell_max`()
BEGIN
select distinct id_image 
from (SELECT DISTINCT COUNT(id_image), id_image 
	  from cart 
      group by id_image
      order by COUNT(id_image) DESC
      LIMIT 10) as temp;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure like_img
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `like_img`(id_user int, id_img int)
BEGIN
update image
set image.likes = image.likes + 1
where image.id = id_img;
INSERT INTO `image_shopping`.`like` (`id_user`, `id_img`) 
VALUES (id_user, id_img);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure pay
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `pay`(id_cart int, atm int)
BEGIN
update cart
set cart.code_atm = atm, cart.paid = 1
where cart.id = id_cart;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure permission_img
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `permission_img`(id_img int, permis int)
BEGIN
update image
set image.accept = permis
where image.id = id_img;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure permission_report
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `permission_report`(id_report int, permis int)
BEGIN
update reports
set reports.accept = permis
where reports.id = id_report;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure permission_user
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `permission_user`(id_user int, permis int)
BEGIN
update user
set user.active = permis
where user.id = id_user;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure remove_cart
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `remove_cart`(id_user int, id_image int)
BEGIN
	DELETE FROM `image_shopping`.`cart`
    WHERE cart.id_user =  id_user
    AND cart.id_image = id_image;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure remove_like
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `remove_like`(id_user int, id_img int)
BEGIN
update image
set image.likes = image.likes - 1
where image.id = id_img;
DELETE FROM `image_shopping`.`like`
WHERE `image_shopping`.`like`.id_user = id_user
AND `image_shopping`.`like`.id_img = id_img;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_cart
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_cart`(id_user int, codeatm int)
BEGIN
UPDATE `image_shopping`.`cart`
SET
`code_atm` = codeatm,
`paid` = 1
WHERE `id_user` = id_user AND `paid` = 0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_img
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_img`( id_img int, 
								type varchar(45), 
								name varchar(45), 
								author int, 
								link longtext, 
								price int,
								album int)
BEGIN
update image
set image.type = type, 
image.name = name, 
image.author = author, 
image.link = link, 
image.price = price,
image.album = album
where image.id = id_img;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure view_img
-- -----------------------------------------------------

DELIMITER $$
USE `image_shopping`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `view_img`(id_img int)
BEGIN
update image
set image.views = image.views + 1
where image.id = id_img;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
